--- Python-2.7/Modules/posixmodule.c	2010-06-17 18:38:34.000000000 +0200
+++ jni/Modules/posixmodule.c	2013-03-25 23:32:21.476612903 +0100
@@ -3744,11 +3744,7 @@
     if (slave_fd < 0)
         return posix_error();
 #if !defined(__CYGWIN__) && !defined(HAVE_DEV_PTC)
-    ioctl(slave_fd, I_PUSH, "ptem"); /* push ptem */
-    ioctl(slave_fd, I_PUSH, "ldterm"); /* push ldterm */
-#ifndef __hpux
-    ioctl(slave_fd, I_PUSH, "ttcompat"); /* push ttcompat */
-#endif /* __hpux */
+    Py_RETURN_NONE;
 #endif /* HAVE_CYGWIN */
 #endif /* HAVE_OPENPTY */
 
@@ -9297,5 +9293,3 @@
 #ifdef __cplusplus
 }
 #endif
-
-
--- Python-2.7/Python/pystrtod.c	2010-05-09 16:46:46.000000000 +0200
+++ jni/Python/pystrtod.c	2013-03-25 23:18:57.748579582 +0100
@@ -376,7 +376,7 @@
 change_decimal_from_locale_to_dot(char* buffer)
 {
     struct lconv *locale_data = localeconv();
-    const char *decimal_point = locale_data->decimal_point;
+    const char *decimal_point = ".";
 
     if (decimal_point[0] != '.' || decimal_point[1] != 0) {
         size_t decimal_point_len = strlen(decimal_point);
--- Python-2.7/Objects/stringlib/formatter.h	2010-06-08 00:32:44.000000000 +0200
+++ jni/Objects/stringlib/formatter.h	2013-03-25 23:33:03.344614639 +0100
@@ -447,7 +447,7 @@
     spec->n_digits = n_number - n_remainder - (has_decimal?1:0);
     spec->n_lpadding = 0;
     spec->n_prefix = n_prefix;
-    spec->n_decimal = has_decimal ? strlen(locale->decimal_point) : 0;
+    spec->n_decimal = has_decimal ? strlen(".") : 0;
     spec->n_remainder = n_remainder;
     spec->n_spadding = 0;
     spec->n_rpadding = 0;
@@ -639,20 +639,8 @@
 get_locale_info(int type, LocaleInfo *locale_info)
 {
     switch (type) {
-    case LT_CURRENT_LOCALE: {
-        struct lconv *locale_data = localeconv();
-        locale_info->decimal_point = locale_data->decimal_point;
-        locale_info->thousands_sep = locale_data->thousands_sep;
-        locale_info->grouping = locale_data->grouping;
-        break;
-    }
+    case LT_CURRENT_LOCALE:
     case LT_DEFAULT_LOCALE:
-        locale_info->decimal_point = ".";
-        locale_info->thousands_sep = ",";
-        locale_info->grouping = "\3"; /* Group every 3 characters.  The
-                                         (implicit) trailing 0 means repeat
-                                         infinitely. */
-        break;
     case LT_NO_LOCALE:
         locale_info->decimal_point = ".";
         locale_info->thousands_sep = "";
--- Python-2.7/Objects/stringlib/localeutil.h	2009-04-22 15:29:05.000000000 +0200
+++ jni/Objects/stringlib/localeutil.h	2013-03-25 23:15:06.684570003 +0100
@@ -203,8 +203,8 @@
                                   Py_ssize_t min_width)
 {
         struct lconv *locale_data = localeconv();
-        const char *grouping = locale_data->grouping;
-        const char *thousands_sep = locale_data->thousands_sep;
+        const char *grouping = "";
+        const char *thousands_sep = "";
 
         return _Py_InsertThousandsGrouping(buffer, n_buffer, digits, n_digits,
                                            min_width, grouping, thousands_sep);
